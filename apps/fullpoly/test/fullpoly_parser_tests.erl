-module(fullpoly_parser_tests).

-include_lib("eunit/include/eunit.hrl").

data() ->
    {ok, Data} = file:read_file("test/test.f"),
    unicode:characters_to_list(Data).

parser_test() ->
    Data = data(),
    {ok, Tokens, _} = fullpoly_lexer:string(Data),
    {ok, ParserF} = fullpoly_parser:parse(Tokens),
    ?assertEqual({[{eval,{3,2},{string,{3,2},"hello"}},
                   {eval,{5,1},{unit,{5,1}}},
                   {eval,{7,1},{abs,{7,1},"x",{id,"A"},{var,{7,13},0,1}}},
                   {eval,{9,1},{let_,{9,1},"x",{true,{9,7}},{var,{9,15},0,1}}},
                   {eval,{11,1},
                    {timesfloat,{11,1},{float,{11,12},2.0},{float,{11,16},3.14159}}},
                   {eval,{13,1},{abs,{13,1},"x",bool,{var,{13,16},0,1}}},
                   {eval,{14,2},
                    {app,{14,2},
                     {abs,{14,2},
                      "x",
                      {arr,bool,bool},
                      {if_,{14,23},
                       {app,{14,26},{var,{14,26},0,1},{false,{14,28}}},
                       {true,{14,39}},
                       {false,{14,49}}}},
                     {abs,{15,4},
                      "x",bool,
                      {if_,{15,19},
                       {var,{15,22},0,1},
                       {false,{15,29}},
                       {true,{15,40}}}}}},
                   {eval,{17,1},{abs,{17,1},"x",nat,{succ,{17,15},{var,{17,20},0,1}}}},
                   {eval,{18,2},
                    {app,{18,2},
                     {abs,{18,2},
                      "x",nat,
                      {succ,{18,16},{succ,{18,22},{var,{18,27},0,1}}}},
                     {succ,{18,32},{zero,{18,37}}}}},
                   {bind,{20,1},"T",{ty_abb_bind,{arr,nat,nat}}},
                   {eval,{21,1},
                    {abs,{21,1},
                     "f",
                     {var,0,1},
                     {abs,{21,13},
                      "x",nat,
                      {app,{21,27},
                       {var,{21,27},1,3},
                       {app,{21,30},{var,{21,30},1,3},{var,{21,32},0,3}}}}}},
                   {eval,{24,1},
                    {ty_abs,{24,1},"X",{abs,{24,11},"x",{var,0,2},{var,{24,23},0,3}}}},
                   {eval,{25,2},
                    {ty_app,{25,2},
                     {ty_abs,{25,2},
                      "X",
                      {abs,{25,12},"x",{var,0,2},{var,{25,24},0,3}}},
                     {all,"X",{arr,{var,0,2},{var,0,2}}}}},
                   {eval,{27,2},
                    {pack,{27,2},
                     {all,"Y",{var,0,2}},
                     {abs,{27,13},"x",{all,"Y",{var,0,2}},{var,{27,33},0,2}},
                     {some,"X",{arr,{var,0,2},{var,0,2}}}}},
                   {eval,{30,1},{record,{30,1},[{"x",{true,{30,4}}},{"y",{false,{30,12}}}]}},
                   {eval,{31,18},
                    {proj,{31,18},
                     {record,{31,1},[{"x",{true,{31,4}}},{"y",{false,{31,12}}}]},
                     "x"}},
                   {eval,{32,1},{record,{32,1},[{"1",{true,{32,2}}},{"2",{false,{32,8}}}]}},
                   {eval,{33,14},
                    {proj,{33,14},
                     {record,{33,1},[{"1",{true,{33,2}}},{"2",{false,{33,8}}}]},
                     "1"}},
                   {eval,{36,1},
                    {pack,{36,1},
                     nat,
                     {record,{36,8},
                      [{"c",{zero,{36,11}}},
                       {"f",
                        {abs,{36,16},
                         "x",nat,
                         {succ,{36,30},{var,{36,35},0,2}}}}]},
                     {some,"X",
                      {record,[{"c",{var,0,2}},{"f",{arr,{var,0,2},nat}}]}}}},
                   {eval,{38,1},
                    {unpack,{38,1},
                     "X","ops",
                     {pack,{38,15},
                      nat,
                      {record,{38,22},
                       [{"c",{zero,{38,25}}},
                        {"f",
                         {abs,{38,30},
                          "x",nat,
                          {succ,{38,44},{var,{38,49},0,2}}}}]},
                      {some,"X",
                       {record,[{"c",{var,0,2}},
                                {"f",{arr,{var,0,2},nat}}]}}},
                     {app,{40,8},
                      {proj,{40,8},{var,{40,5},0,3},"f"},
                      {proj,{40,14},{var,{40,11},0,3},"c"}}}}],
                  [{"T",name_bind}]},
                 ParserF([])).
